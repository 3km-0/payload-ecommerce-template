/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    administrators: AdministratorAuthOperations;
    customers: CustomerAuthOperations;
  };
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    administrators: Administrator;
    customers: Customer;
    orders: Order;
    products: Product;
    productCategories: ProductCategory;
    productSubCategories: ProductSubCategory;
    productReviews: ProductReview;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    productCategories: {
      subcategories: 'productSubCategories';
      products: 'products';
    };
    productSubCategories: {
      products: 'products';
    };
  };
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    administrators: AdministratorsSelect<false> | AdministratorsSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    productCategories: ProductCategoriesSelect<false> | ProductCategoriesSelect<true>;
    productSubCategories: ProductSubCategoriesSelect<false> | ProductSubCategoriesSelect<true>;
    productReviews: ProductReviewsSelect<false> | ProductReviewsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
    shopSettings: ShopSetting;
    shopLayout: ShopLayout;
    'inpost-pickup': InpostPickup;
    'inpost-courier': InpostCourier;
    'inpost-courier-cod': InpostCourierCod;
    paywalls: Paywall;
    fulfilment: Fulfilment;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    shopSettings: ShopSettingsSelect<false> | ShopSettingsSelect<true>;
    shopLayout: ShopLayoutSelect<false> | ShopLayoutSelect<true>;
    'inpost-pickup': InpostPickupSelect<false> | InpostPickupSelect<true>;
    'inpost-courier': InpostCourierSelect<false> | InpostCourierSelect<true>;
    'inpost-courier-cod': InpostCourierCodSelect<false> | InpostCourierCodSelect<true>;
    paywalls: PaywallsSelect<false> | PaywallsSelect<true>;
    fulfilment: FulfilmentSelect<false> | FulfilmentSelect<true>;
  };
  locale: 'en' | 'pl';
  user:
    | (Administrator & {
        collection: 'administrators';
      })
    | (Customer & {
        collection: 'customers';
      });
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface AdministratorAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface CustomerAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
    reversed?: boolean | null;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock | CarouselBlock | AccordionBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | Administrator)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "administrators".
 */
export interface Administrator {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  spacingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
  spacingTop?: ('none' | 'small' | 'medium' | 'large') | null;
  paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
  paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneSixth' | 'oneThird' | 'half' | 'twoThirds' | 'fiveSixth' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        enableProse?: boolean | null;
        paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
        paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        background?: string | null;
        id?: string | null;
      }[]
    | null;
  alignment?: ('center' | 'left' | 'right' | 'full') | null;
  spacingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
  spacingTop?: ('none' | 'small' | 'medium' | 'large') | null;
  paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
  paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
  radius?: boolean | null;
  specifiedRadius?: boolean | null;
  radiusAll?:
    | (
        | 'rounded-none'
        | 'rounded-sm'
        | 'rounded-md'
        | 'rounded-lg'
        | 'rounded-xl'
        | 'rounded-2xl'
        | 'rounded-3xl'
        | 'rounded-full'
      )
    | null;
  radiusTopLeft?:
    | (
        | 'rounded-tl-none'
        | 'rounded-tl-sm'
        | 'rounded-tl-md'
        | 'rounded-tl-lg'
        | 'rounded-tl-xl'
        | 'rounded-tl-2xl'
        | 'rounded-tl-3xl'
        | 'rounded-tl-full'
      )
    | null;
  radiusTopRight?:
    | (
        | 'rounded-tr-none'
        | 'rounded-tr-sm'
        | 'rounded-tr-md'
        | 'rounded-tr-lg'
        | 'rounded-tr-xl'
        | 'rounded-tr-2xl'
        | 'rounded-tr-3xl'
        | 'rounded-tr-full'
      )
    | null;
  radiusBottomLeft?:
    | (
        | 'rounded-bl-none'
        | 'rounded-bl-sm'
        | 'rounded-bl-md'
        | 'rounded-bl-lg'
        | 'rounded-bl-xl'
        | 'rounded-bl-2xl'
        | 'rounded-bl-3xl'
        | 'rounded-bl-full'
      )
    | null;
  radiusBottomRight?:
    | (
        | 'rounded-br-none'
        | 'rounded-br-sm'
        | 'rounded-br-md'
        | 'rounded-br-lg'
        | 'rounded-br-xl'
        | 'rounded-br-2xl'
        | 'rounded-br-3xl'
        | 'rounded-br-full'
      )
    | null;
  background?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  spacingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
  spacingTop?: ('none' | 'small' | 'medium' | 'large') | null;
  paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
  paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselBlock".
 */
export interface CarouselBlock {
  type: 'default' | 'logo';
  title?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  slides?:
    | {
        image: string | Media;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  autoplay?: number | null;
  spacingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
  spacingTop?: ('none' | 'small' | 'medium' | 'large') | null;
  paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
  paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'carousel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AccordionBlock".
 */
export interface AccordionBlock {
  title?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  items: {
    title: string;
    content: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    id?: string | null;
  }[];
  spacingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
  spacingTop?: ('none' | 'small' | 'medium' | 'large') | null;
  paddingBottom?: ('none' | 'small' | 'medium' | 'large') | null;
  paddingTop?: ('none' | 'small' | 'medium' | 'large') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'accordion';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  birthDate?: string | null;
  lastBuyerType?: ('individual' | 'company') | null;
  shippings?:
    | {
        name: string;
        address: string;
        city: string;
        country:
          | 'ad'
          | 'al'
          | 'at'
          | 'ba'
          | 'be'
          | 'bg'
          | 'by'
          | 'ch'
          | 'cy'
          | 'cz'
          | 'de'
          | 'dk'
          | 'ee'
          | 'es'
          | 'fi'
          | 'fr'
          | 'gb'
          | 'gr'
          | 'hr'
          | 'hu'
          | 'ie'
          | 'is'
          | 'it'
          | 'li'
          | 'lt'
          | 'lu'
          | 'lv'
          | 'mc'
          | 'md'
          | 'me'
          | 'mk'
          | 'mt'
          | 'nl'
          | 'no'
          | 'pl'
          | 'pt'
          | 'ro'
          | 'rs'
          | 'ru'
          | 'se'
          | 'si'
          | 'sk'
          | 'sm'
          | 'ua'
          | 'va';
        region: string;
        postalCode: string;
        phone: string;
        email: string;
        default?: boolean | null;
        id?: string | null;
      }[]
    | null;
  cart?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  customer?: (string | null) | Customer;
  date?: string | null;
  extractedFromStock?: boolean | null;
  products?:
    | {
        product?: (string | null) | Product;
        productName?: string | null;
        hasVariant?: boolean | null;
        color?: string | null;
        size?: string | null;
        variantSlug?: string | null;
        quantity?: number | null;
        id?: string | null;
      }[]
    | null;
  invoice?: {
    isCompany?: boolean | null;
    name?: string | null;
    tin?: string | null;
    address?: string | null;
    city?: string | null;
    country?:
      | (
          | 'ad'
          | 'al'
          | 'at'
          | 'ba'
          | 'be'
          | 'bg'
          | 'by'
          | 'ch'
          | 'cy'
          | 'cz'
          | 'de'
          | 'dk'
          | 'ee'
          | 'es'
          | 'fi'
          | 'fr'
          | 'gb'
          | 'gr'
          | 'hr'
          | 'hu'
          | 'ie'
          | 'is'
          | 'it'
          | 'li'
          | 'lt'
          | 'lu'
          | 'lv'
          | 'mc'
          | 'md'
          | 'me'
          | 'mk'
          | 'mt'
          | 'nl'
          | 'no'
          | 'pl'
          | 'pt'
          | 'ro'
          | 'rs'
          | 'ru'
          | 'se'
          | 'si'
          | 'sk'
          | 'sm'
          | 'ua'
          | 'va'
        )
      | null;
    region?: string | null;
    postalCode?: string | null;
  };
  printLabel?: {
    packageNumber?: string | null;
    width?: number | null;
    height?: number | null;
    length?: number | null;
    weight?: number | null;
    dimension?: string | null;
  };
  shippingAddress: {
    name: string;
    address: string;
    pickupPointID?: string | null;
    pickupPointAddress?: string | null;
    city: string;
    country:
      | 'ad'
      | 'al'
      | 'at'
      | 'ba'
      | 'be'
      | 'bg'
      | 'by'
      | 'ch'
      | 'cy'
      | 'cz'
      | 'de'
      | 'dk'
      | 'ee'
      | 'es'
      | 'fi'
      | 'fr'
      | 'gb'
      | 'gr'
      | 'hr'
      | 'hu'
      | 'ie'
      | 'is'
      | 'it'
      | 'li'
      | 'lt'
      | 'lu'
      | 'lv'
      | 'mc'
      | 'md'
      | 'me'
      | 'mk'
      | 'mt'
      | 'nl'
      | 'no'
      | 'pl'
      | 'pt'
      | 'ro'
      | 'rs'
      | 'ru'
      | 'se'
      | 'si'
      | 'sk'
      | 'sm'
      | 'ua'
      | 'va';
    region: string;
    postalCode: string;
    email: string;
    phone: string;
  };
  orderDetails: {
    total?: number | null;
    shippingCost?: number | null;
    totalWithShipping?: number | null;
    currency?: string | null;
    shipping?: string | null;
    transactionID?: string | null;
    status: 'pending' | 'paid' | 'processing' | 'shipped' | 'completed' | 'cancelled' | 'returned';
    shippingDate?: string | null;
    trackingNumber?: string | null;
    orderNote?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * If you have variants, first image will be variant image.
   */
  images: (string | Media)[];
  details?:
    | {
        title: string;
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  enableVariants?: boolean | null;
  /**
   * If false, price is in Product Details
   */
  enableVariantPrices?: boolean | null;
  /**
   * If false, weight is in Product Details
   */
  enableVariantWeights?: boolean | null;
  variantsType?: ('sizes' | 'colors' | 'colorsAndSizes') | null;
  colors?:
    | {
        label: string;
        slug: string;
        colorValue?: string | null;
        id?: string | null;
      }[]
    | null;
  sizes?:
    | {
        label: string;
        slug: string;
        id?: string | null;
      }[]
    | null;
  variants?:
    | {
        size?: string | null;
        color?: string | null;
        variantSlug?: string | null;
        image?: (string | null) | Media;
        /**
         * Define stock for this variant. A stock of 0 disables checkout for this variant.
         */
        stock: number;
        /**
         * Define weight for this variant.
         */
        weight?: number | null;
        pricing?:
          | {
              value: number;
              currency: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  categoriesArr?:
    | {
        category: string | ProductCategory;
        subcategories?: (string | ProductSubCategory)[] | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Define stock for whole product. A stock of 0 disables checkout for this product.
   */
  stock?: number | null;
  /**
   * Define weight for whole product.
   */
  weight?: number | null;
  pricing?:
    | {
        value: number;
        currency: string;
        id?: string | null;
      }[]
    | null;
  bought?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productCategories".
 */
export interface ProductCategory {
  id: string;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  subcategories?: {
    docs?: (string | ProductSubCategory)[] | null;
    hasNextPage?: boolean | null;
  } | null;
  products?: {
    docs?: (string | Product)[] | null;
    hasNextPage?: boolean | null;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productSubCategories".
 */
export interface ProductSubCategory {
  id: string;
  category: string | ProductCategory;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  products?: {
    docs?: (string | Product)[] | null;
    hasNextPage?: boolean | null;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productReviews".
 */
export interface ProductReview {
  id: string;
  product: string | Product;
  author: string | Customer;
  rating: number;
  review?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: string | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'administrators';
        value: string | Administrator;
      } | null)
    | ({
        relationTo: 'customers';
        value: string | Customer;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'productCategories';
        value: string | ProductCategory;
      } | null)
    | ({
        relationTo: 'productSubCategories';
        value: string | ProductSubCategory;
      } | null)
    | ({
        relationTo: 'productReviews';
        value: string | ProductReview;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'administrators';
        value: string | Administrator;
      }
    | {
        relationTo: 'customers';
        value: string | Customer;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'administrators';
        value: string | Administrator;
      }
    | {
        relationTo: 'customers';
        value: string | Customer;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
        reversed?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        carousel?: T | CarouselBlockSelect<T>;
        accordion?: T | AccordionBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  spacingBottom?: T;
  spacingTop?: T;
  paddingBottom?: T;
  paddingTop?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        enableProse?: T;
        paddingBottom?: T;
        paddingTop?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        background?: T;
        id?: T;
      };
  alignment?: T;
  spacingBottom?: T;
  spacingTop?: T;
  paddingBottom?: T;
  paddingTop?: T;
  radius?: T;
  specifiedRadius?: T;
  radiusAll?: T;
  radiusTopLeft?: T;
  radiusTopRight?: T;
  radiusBottomLeft?: T;
  radiusBottomRight?: T;
  background?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  spacingBottom?: T;
  spacingTop?: T;
  paddingBottom?: T;
  paddingTop?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselBlock_select".
 */
export interface CarouselBlockSelect<T extends boolean = true> {
  type?: T;
  title?: T;
  slides?:
    | T
    | {
        image?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  autoplay?: T;
  spacingBottom?: T;
  spacingTop?: T;
  paddingBottom?: T;
  paddingTop?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AccordionBlock_select".
 */
export interface AccordionBlockSelect<T extends boolean = true> {
  title?: T;
  items?:
    | T
    | {
        title?: T;
        content?: T;
        id?: T;
      };
  spacingBottom?: T;
  spacingTop?: T;
  paddingBottom?: T;
  paddingTop?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "administrators_select".
 */
export interface AdministratorsSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  birthDate?: T;
  lastBuyerType?: T;
  shippings?:
    | T
    | {
        name?: T;
        address?: T;
        city?: T;
        country?: T;
        region?: T;
        postalCode?: T;
        phone?: T;
        email?: T;
        default?: T;
        id?: T;
      };
  cart?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  id?: T;
  customer?: T;
  date?: T;
  extractedFromStock?: T;
  products?:
    | T
    | {
        product?: T;
        productName?: T;
        hasVariant?: T;
        color?: T;
        size?: T;
        variantSlug?: T;
        quantity?: T;
        id?: T;
      };
  invoice?:
    | T
    | {
        isCompany?: T;
        name?: T;
        tin?: T;
        address?: T;
        city?: T;
        country?: T;
        region?: T;
        postalCode?: T;
      };
  printLabel?:
    | T
    | {
        packageNumber?: T;
        width?: T;
        height?: T;
        length?: T;
        weight?: T;
        dimension?: T;
      };
  shippingAddress?:
    | T
    | {
        name?: T;
        address?: T;
        pickupPointID?: T;
        pickupPointAddress?: T;
        city?: T;
        country?: T;
        region?: T;
        postalCode?: T;
        email?: T;
        phone?: T;
      };
  orderDetails?:
    | T
    | {
        total?: T;
        shippingCost?: T;
        totalWithShipping?: T;
        currency?: T;
        shipping?: T;
        transactionID?: T;
        status?: T;
        shippingDate?: T;
        trackingNumber?: T;
        orderNote?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  images?: T;
  details?:
    | T
    | {
        title?: T;
        content?: T;
        id?: T;
      };
  enableVariants?: T;
  enableVariantPrices?: T;
  enableVariantWeights?: T;
  variantsType?: T;
  colors?:
    | T
    | {
        label?: T;
        slug?: T;
        colorValue?: T;
        id?: T;
      };
  sizes?:
    | T
    | {
        label?: T;
        slug?: T;
        id?: T;
      };
  variants?:
    | T
    | {
        size?: T;
        color?: T;
        variantSlug?: T;
        image?: T;
        stock?: T;
        weight?: T;
        pricing?:
          | T
          | {
              value?: T;
              currency?: T;
              id?: T;
            };
        id?: T;
      };
  categoriesArr?:
    | T
    | {
        category?: T;
        subcategories?: T;
        id?: T;
      };
  stock?: T;
  weight?: T;
  pricing?:
    | T
    | {
        value?: T;
        currency?: T;
        id?: T;
      };
  bought?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productCategories_select".
 */
export interface ProductCategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  subcategories?: T;
  products?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productSubCategories_select".
 */
export interface ProductSubCategoriesSelect<T extends boolean = true> {
  category?: T;
  title?: T;
  slug?: T;
  slugLock?: T;
  products?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productReviews_select".
 */
export interface ProductReviewsSelect<T extends boolean = true> {
  product?: T;
  author?: T;
  rating?: T;
  review?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  type: 'default' | 'floating';
  logo?: (string | null) | Media;
  hideOnScroll?: boolean | null;
  background?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  attribution?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shopSettings".
 */
export interface ShopSetting {
  id: string;
  /**
   * First currency is the default one
   */
  availableCurrencies: ('USD' | 'EUR' | 'GBP' | 'PLN')[];
  enableOAuth: boolean;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shopLayout".
 */
export interface ShopLayout {
  id: string;
  productDetails: {
    type: 'WithImageGalleryExpandableDetails';
    reviewsEnabled: boolean;
  };
  productList: {
    filters: 'none' | 'withSidebar' | 'sortOnly';
  };
  cart: {
    type: 'slideOver';
  };
  checkout: {
    type: 'OneStepWithSummary';
  };
  clientPanel: {
    type: 'withSidebar';
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inpost-pickup".
 */
export interface InpostPickup {
  id: string;
  enabled?: boolean | null;
  settings: {
    label: string;
    /**
     * You can provide typical delivery time or any other information
     */
    description?: string | null;
  };
  deliveryZones?:
    | {
        countries: (
          | 'ad'
          | 'al'
          | 'at'
          | 'ba'
          | 'be'
          | 'bg'
          | 'by'
          | 'ch'
          | 'cy'
          | 'cz'
          | 'de'
          | 'dk'
          | 'ee'
          | 'es'
          | 'fi'
          | 'fr'
          | 'gb'
          | 'gr'
          | 'hr'
          | 'hu'
          | 'ie'
          | 'is'
          | 'it'
          | 'li'
          | 'lt'
          | 'lu'
          | 'lv'
          | 'mc'
          | 'md'
          | 'me'
          | 'mk'
          | 'mt'
          | 'nl'
          | 'no'
          | 'pl'
          | 'pt'
          | 'ro'
          | 'rs'
          | 'ru'
          | 'se'
          | 'si'
          | 'sk'
          | 'sm'
          | 'ua'
          | 'va'
        )[];
        freeShipping?:
          | {
              value: number;
              currency: string;
              id?: string | null;
            }[]
          | null;
        range?:
          | {
              weightFrom: number;
              weightTo: number;
              pricing: {
                value: number;
                currency: string;
                id?: string | null;
              }[];
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  icon?: (string | null) | Media;
  clientId?: string | null;
  /**
   * Remember to pass matching keys for choosen environment
   */
  APIUrl?: ('https://api-shipx-pl.easypack24.net' | 'https://sandbox-api-shipx-pl.easypack24.net') | null;
  shipXAPIKey?: string | null;
  geowidgetToken?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inpost-courier".
 */
export interface InpostCourier {
  id: string;
  enabled?: boolean | null;
  settings: {
    label: string;
    /**
     * You can provide typical delivery time or any other information
     */
    description?: string | null;
  };
  deliveryZones?:
    | {
        countries: (
          | 'ad'
          | 'al'
          | 'at'
          | 'ba'
          | 'be'
          | 'bg'
          | 'by'
          | 'ch'
          | 'cy'
          | 'cz'
          | 'de'
          | 'dk'
          | 'ee'
          | 'es'
          | 'fi'
          | 'fr'
          | 'gb'
          | 'gr'
          | 'hr'
          | 'hu'
          | 'ie'
          | 'is'
          | 'it'
          | 'li'
          | 'lt'
          | 'lu'
          | 'lv'
          | 'mc'
          | 'md'
          | 'me'
          | 'mk'
          | 'mt'
          | 'nl'
          | 'no'
          | 'pl'
          | 'pt'
          | 'ro'
          | 'rs'
          | 'ru'
          | 'se'
          | 'si'
          | 'sk'
          | 'sm'
          | 'ua'
          | 'va'
        )[];
        freeShipping?:
          | {
              value: number;
              currency: string;
              id?: string | null;
            }[]
          | null;
        range?:
          | {
              weightFrom: number;
              weightTo: number;
              pricing: {
                value: number;
                currency: string;
                id?: string | null;
              }[];
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  icon?: (string | null) | Media;
  clientId?: string | null;
  /**
   * Remember to pass matching keys for choosen environment
   */
  APIUrl?: ('https://api-shipx-pl.easypack24.net' | 'https://sandbox-api-shipx-pl.easypack24.net') | null;
  shipXAPIKey?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inpost-courier-cod".
 */
export interface InpostCourierCod {
  id: string;
  enabled?: boolean | null;
  settings: {
    label: string;
    /**
     * You can provide typical delivery time or any other information
     */
    description?: string | null;
  };
  deliveryZones?:
    | {
        countries: (
          | 'ad'
          | 'al'
          | 'at'
          | 'ba'
          | 'be'
          | 'bg'
          | 'by'
          | 'ch'
          | 'cy'
          | 'cz'
          | 'de'
          | 'dk'
          | 'ee'
          | 'es'
          | 'fi'
          | 'fr'
          | 'gb'
          | 'gr'
          | 'hr'
          | 'hu'
          | 'ie'
          | 'is'
          | 'it'
          | 'li'
          | 'lt'
          | 'lu'
          | 'lv'
          | 'mc'
          | 'md'
          | 'me'
          | 'mk'
          | 'mt'
          | 'nl'
          | 'no'
          | 'pl'
          | 'pt'
          | 'ro'
          | 'rs'
          | 'ru'
          | 'se'
          | 'si'
          | 'sk'
          | 'sm'
          | 'ua'
          | 'va'
        )[];
        freeShipping?:
          | {
              value: number;
              currency: string;
              id?: string | null;
            }[]
          | null;
        range?:
          | {
              weightFrom: number;
              weightTo: number;
              pricing: {
                value: number;
                currency: string;
                id?: string | null;
              }[];
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  icon?: (string | null) | Media;
  clientId?: string | null;
  /**
   * Remember to pass matching keys for choosen environment
   */
  APIUrl?: ('https://api-shipx-pl.easypack24.net' | 'https://sandbox-api-shipx-pl.easypack24.net') | null;
  shipXAPIKey?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "paywalls".
 */
export interface Paywall {
  id: string;
  paywall: 'stripe' | 'autopay';
  /**
   * If you want to use test environment, you can also provide test keys here.
   */
  stripe?: {
    secret: string;
    public?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fulfilment".
 */
export interface Fulfilment {
  id: string;
  shopAddress: {
    name: string;
    address: string;
    city: string;
    country:
      | 'ad'
      | 'al'
      | 'at'
      | 'ba'
      | 'be'
      | 'bg'
      | 'by'
      | 'ch'
      | 'cy'
      | 'cz'
      | 'de'
      | 'dk'
      | 'ee'
      | 'es'
      | 'fi'
      | 'fr'
      | 'gb'
      | 'gr'
      | 'hr'
      | 'hu'
      | 'ie'
      | 'is'
      | 'it'
      | 'li'
      | 'lt'
      | 'lu'
      | 'lv'
      | 'mc'
      | 'md'
      | 'me'
      | 'mk'
      | 'mt'
      | 'nl'
      | 'no'
      | 'pl'
      | 'pt'
      | 'ro'
      | 'rs'
      | 'ru'
      | 'se'
      | 'si'
      | 'sk'
      | 'sm'
      | 'ua'
      | 'va';
    region: string;
    postalCode: string;
    email: string;
    phone: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  type?: T;
  logo?: T;
  hideOnScroll?: T;
  background?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  attribution?: T;
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shopSettings_select".
 */
export interface ShopSettingsSelect<T extends boolean = true> {
  availableCurrencies?: T;
  enableOAuth?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shopLayout_select".
 */
export interface ShopLayoutSelect<T extends boolean = true> {
  productDetails?:
    | T
    | {
        type?: T;
        reviewsEnabled?: T;
      };
  productList?:
    | T
    | {
        filters?: T;
      };
  cart?:
    | T
    | {
        type?: T;
      };
  checkout?:
    | T
    | {
        type?: T;
      };
  clientPanel?:
    | T
    | {
        type?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inpost-pickup_select".
 */
export interface InpostPickupSelect<T extends boolean = true> {
  enabled?: T;
  settings?:
    | T
    | {
        label?: T;
        description?: T;
      };
  deliveryZones?:
    | T
    | {
        countries?: T;
        freeShipping?:
          | T
          | {
              value?: T;
              currency?: T;
              id?: T;
            };
        range?:
          | T
          | {
              weightFrom?: T;
              weightTo?: T;
              pricing?:
                | T
                | {
                    value?: T;
                    currency?: T;
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  icon?: T;
  clientId?: T;
  APIUrl?: T;
  shipXAPIKey?: T;
  geowidgetToken?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inpost-courier_select".
 */
export interface InpostCourierSelect<T extends boolean = true> {
  enabled?: T;
  settings?:
    | T
    | {
        label?: T;
        description?: T;
      };
  deliveryZones?:
    | T
    | {
        countries?: T;
        freeShipping?:
          | T
          | {
              value?: T;
              currency?: T;
              id?: T;
            };
        range?:
          | T
          | {
              weightFrom?: T;
              weightTo?: T;
              pricing?:
                | T
                | {
                    value?: T;
                    currency?: T;
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  icon?: T;
  clientId?: T;
  APIUrl?: T;
  shipXAPIKey?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inpost-courier-cod_select".
 */
export interface InpostCourierCodSelect<T extends boolean = true> {
  enabled?: T;
  settings?:
    | T
    | {
        label?: T;
        description?: T;
      };
  deliveryZones?:
    | T
    | {
        countries?: T;
        freeShipping?:
          | T
          | {
              value?: T;
              currency?: T;
              id?: T;
            };
        range?:
          | T
          | {
              weightFrom?: T;
              weightTo?: T;
              pricing?:
                | T
                | {
                    value?: T;
                    currency?: T;
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  icon?: T;
  clientId?: T;
  APIUrl?: T;
  shipXAPIKey?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "paywalls_select".
 */
export interface PaywallsSelect<T extends boolean = true> {
  paywall?: T;
  stripe?:
    | T
    | {
        secret?: T;
        public?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fulfilment_select".
 */
export interface FulfilmentSelect<T extends boolean = true> {
  shopAddress?:
    | T
    | {
        name?: T;
        address?: T;
        city?: T;
        country?: T;
        region?: T;
        postalCode?: T;
        email?: T;
        phone?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}